/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [0]  [  0/500]  eta: 0:12:27  lr: 0.000015  loss: 2.0087 (2.0087)  loss_classifier: 0.6061 (0.6061)  loss_box_reg: 0.9117 (0.9117)  loss_mask: 0.3626 (0.3626)  loss_objectness: 0.0808 (0.0808)  loss_rpn_box_reg: 0.0475 (0.0475)  time: 1.4948  data: 0.8423  max mem: 2740
Epoch: [0]  [499/500]  eta: 0:00:00  lr: 0.005000  loss: 0.5184 (0.7460)  loss_classifier: 0.1577 (0.2254)  loss_box_reg: 0.3375 (0.4753)  loss_mask: 0.0000 (0.0054)  loss_objectness: 0.0041 (0.0153)  loss_rpn_box_reg: 0.0159 (0.0246)  time: 0.4635  data: 0.0126  max mem: 3079
Epoch: [0] Total time: 0:04:03 (0.4874 s / it)
Printing the loss: 0.4929195046424866
Print loss: 0.4929195046424866
creating index...
index created!
Test:  [  0/199]  eta: 0:03:46  model_time: 0.4106 (0.4106)  evaluator_time: 0.1848 (0.1848)  time: 1.1383  data: 0.5318  max mem: 3079
Test:  [100/199]  eta: 0:00:35  model_time: 0.1831 (0.1804)  evaluator_time: 0.1681 (0.1615)  time: 0.3660  data: 0.0057  max mem: 3079
Test:  [198/199]  eta: 0:00:00  model_time: 0.1836 (0.1813)  evaluator_time: 0.1772 (0.1683)  time: 0.3738  data: 0.0057  max mem: 3079
Test: Total time: 0:01:13 (0.3682 s / it)
Averaged stats: model_time: 0.1836 (0.1813)  evaluator_time: 0.1772 (0.1683)
Accumulating evaluation results...
DONE (t=0.06s).
Accumulating evaluation results...
DONE (t=0.04s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.562
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.941
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.623
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.564
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.565
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.046
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.415
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.636
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.644
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.633
IoU metric: segm
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [1]  [  0/500]  eta: 0:17:11  lr: 0.005000  loss: 0.4109 (0.4109)  loss_classifier: 0.1219 (0.1219)  loss_box_reg: 0.2727 (0.2727)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0034 (0.0034)  loss_rpn_box_reg: 0.0129 (0.0129)  time: 2.0636  data: 1.4615  max mem: 3079
Epoch: [1]  [499/500]  eta: 0:00:00  lr: 0.005000  loss: 0.3516 (0.4059)  loss_classifier: 0.1085 (0.1255)  loss_box_reg: 0.2302 (0.2662)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0011 (0.0036)  loss_rpn_box_reg: 0.0075 (0.0106)  time: 0.4623  data: 0.0121  max mem: 3079
Epoch: [1] Total time: 0:04:05 (0.4901 s / it)
Printing the loss: 0.182746022939682
Print loss: 0.182746022939682
creating index...
index created!
Test:  [  0/199]  eta: 0:03:25  model_time: 0.4351 (0.4351)  evaluator_time: 0.1120 (0.1120)  time: 1.0325  data: 0.4768  max mem: 3079
Test:  [100/199]  eta: 0:00:28  model_time: 0.1505 (0.1548)  evaluator_time: 0.1177 (0.1115)  time: 0.2861  data: 0.0056  max mem: 3079
Test:  [198/199]  eta: 0:00:00  model_time: 0.1523 (0.1549)  evaluator_time: 0.1255 (0.1169)  time: 0.2931  data: 0.0057  max mem: 3079
Test: Total time: 0:00:57 (0.2907 s / it)
Averaged stats: model_time: 0.1523 (0.1549)  evaluator_time: 0.1255 (0.1169)
Accumulating evaluation results...
DONE (t=0.04s).
Accumulating evaluation results...
DONE (t=0.04s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.613
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.948
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.726
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.591
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.624
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.049
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.446
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.677
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.653
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.687
IoU metric: segm
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [2]  [  0/500]  eta: 0:12:01  lr: 0.005000  loss: 0.3744 (0.3744)  loss_classifier: 0.1214 (0.1214)  loss_box_reg: 0.2426 (0.2426)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0009 (0.0009)  loss_rpn_box_reg: 0.0095 (0.0095)  time: 1.4421  data: 0.8377  max mem: 3079
Epoch: [2]  [499/500]  eta: 0:00:00  lr: 0.005000  loss: 0.2909 (0.3057)  loss_classifier: 0.0899 (0.0957)  loss_box_reg: 0.1935 (0.2009)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0008 (0.0020)  loss_rpn_box_reg: 0.0056 (0.0071)  time: 0.4671  data: 0.0138  max mem: 3079
Epoch: [2] Total time: 0:04:04 (0.4890 s / it)
Printing the loss: 0.2909122705459595
Print loss: 0.2909122705459595
creating index...
index created!
Test:  [  0/199]  eta: 0:03:34  model_time: 0.3875 (0.3875)  evaluator_time: 0.1203 (0.1203)  time: 1.0783  data: 0.5608  max mem: 3079
Test:  [100/199]  eta: 0:00:28  model_time: 0.1545 (0.1559)  evaluator_time: 0.1170 (0.1146)  time: 0.2930  data: 0.0057  max mem: 3079
Test:  [198/199]  eta: 0:00:00  model_time: 0.1565 (0.1557)  evaluator_time: 0.1307 (0.1197)  time: 0.2963  data: 0.0056  max mem: 3079
Test: Total time: 0:00:58 (0.2948 s / it)
Averaged stats: model_time: 0.1565 (0.1557)  evaluator_time: 0.1307 (0.1197)
Accumulating evaluation results...
DONE (t=0.05s).
Accumulating evaluation results...
DONE (t=0.04s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.683
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.958
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.843
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.665
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.687
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.052
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.480
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.738
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.733
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.740
IoU metric: segm
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [3]  [  0/500]  eta: 0:10:37  lr: 0.005000  loss: 0.2782 (0.2782)  loss_classifier: 0.0988 (0.0988)  loss_box_reg: 0.1755 (0.1755)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0006 (0.0006)  loss_rpn_box_reg: 0.0033 (0.0033)  time: 1.2755  data: 0.6618  max mem: 3079
Epoch: [3]  [499/500]  eta: 0:00:00  lr: 0.005000  loss: 0.2606 (0.2635)  loss_classifier: 0.0797 (0.0819)  loss_box_reg: 0.1702 (0.1742)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0007 (0.0015)  loss_rpn_box_reg: 0.0058 (0.0058)  time: 0.4650  data: 0.0136  max mem: 3079
Epoch: [3] Total time: 0:04:04 (0.4889 s / it)
Printing the loss: 0.260573148727417
Print loss: 0.260573148727417
creating index...
index created!
Test:  [  0/199]  eta: 0:03:34  model_time: 0.4690 (0.4690)  evaluator_time: 0.1203 (0.1203)  time: 1.0765  data: 0.4706  max mem: 3079
Test:  [100/199]  eta: 0:00:28  model_time: 0.1501 (0.1534)  evaluator_time: 0.1117 (0.1086)  time: 0.2834  data: 0.0064  max mem: 3079
Test:  [198/199]  eta: 0:00:00  model_time: 0.1513 (0.1527)  evaluator_time: 0.1269 (0.1135)  time: 0.2890  data: 0.0057  max mem: 3079
Test: Total time: 0:00:56 (0.2854 s / it)
Averaged stats: model_time: 0.1513 (0.1527)  evaluator_time: 0.1269 (0.1135)
Accumulating evaluation results...
DONE (t=0.04s).
Accumulating evaluation results...
DONE (t=0.04s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.702
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.958
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.858
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.687
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.708
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.053
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.493
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.754
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.746
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.758
IoU metric: segm
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [4]  [  0/500]  eta: 0:17:46  lr: 0.005000  loss: 0.2602 (0.2602)  loss_classifier: 0.1052 (0.1052)  loss_box_reg: 0.1517 (0.1517)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0003 (0.0003)  loss_rpn_box_reg: 0.0030 (0.0030)  time: 2.1327  data: 1.6310  max mem: 3079
Epoch: [4]  [499/500]  eta: 0:00:00  lr: 0.005000  loss: 0.2090 (0.2272)  loss_classifier: 0.0599 (0.0713)  loss_box_reg: 0.1429 (0.1500)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0005 (0.0011)  loss_rpn_box_reg: 0.0043 (0.0048)  time: 0.4604  data: 0.0141  max mem: 3079
Epoch: [4] Total time: 0:04:03 (0.4874 s / it)
Printing the loss: 0.13324999809265137
Print loss: 0.13324999809265137
creating index...
index created!
Test:  [  0/199]  eta: 0:03:24  model_time: 0.3533 (0.3533)  evaluator_time: 0.1127 (0.1127)  time: 1.0295  data: 0.5530  max mem: 3079
Test:  [100/199]  eta: 0:00:27  model_time: 0.1511 (0.1492)  evaluator_time: 0.1185 (0.1043)  time: 0.2812  data: 0.0058  max mem: 3079
Test:  [198/199]  eta: 0:00:00  model_time: 0.1495 (0.1494)  evaluator_time: 0.1178 (0.1093)  time: 0.2790  data: 0.0058  max mem: 3079
Test: Total time: 0:00:55 (0.2781 s / it)
Averaged stats: model_time: 0.1495 (0.1494)  evaluator_time: 0.1178 (0.1093)
Accumulating evaluation results...
DONE (t=0.04s).
Accumulating evaluation results...
DONE (t=0.04s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.706
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.873
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.680
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.716
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.053
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.493
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.756
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.744
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.761
IoU metric: segm
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [5]  [  0/500]  eta: 0:10:20  lr: 0.005000  loss: 0.1372 (0.1372)  loss_classifier: 0.0487 (0.0487)  loss_box_reg: 0.0848 (0.0848)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0005 (0.0005)  loss_rpn_box_reg: 0.0032 (0.0032)  time: 1.2415  data: 0.6481  max mem: 3079
Epoch: [5]  [499/500]  eta: 0:00:00  lr: 0.005000  loss: 0.1942 (0.2080)  loss_classifier: 0.0622 (0.0661)  loss_box_reg: 0.1291 (0.1368)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0005 (0.0010)  loss_rpn_box_reg: 0.0035 (0.0042)  time: 0.4574  data: 0.0139  max mem: 3079
Epoch: [5] Total time: 0:04:04 (0.4884 s / it)
Printing the loss: 0.17126327753067017
Print loss: 0.17126327753067017
creating index...
index created!
Test:  [  0/199]  eta: 0:03:28  model_time: 0.4964 (0.4964)  evaluator_time: 0.1212 (0.1212)  time: 1.0494  data: 0.4164  max mem: 3079
Test:  [100/199]  eta: 0:00:27  model_time: 0.1465 (0.1503)  evaluator_time: 0.1054 (0.1045)  time: 0.2758  data: 0.0057  max mem: 3079
Test:  [198/199]  eta: 0:00:00  model_time: 0.1486 (0.1506)  evaluator_time: 0.1189 (0.1095)  time: 0.2827  data: 0.0057  max mem: 3079
Test: Total time: 0:00:55 (0.2788 s / it)
Averaged stats: model_time: 0.1486 (0.1506)  evaluator_time: 0.1189 (0.1095)
Accumulating evaluation results...
DONE (t=0.04s).
Accumulating evaluation results...
DONE (t=0.04s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.740
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.897
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.720
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.745
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.054
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.511
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.788
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.781
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.791
IoU metric: segm
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [6]  [  0/500]  eta: 0:15:42  lr: 0.005000  loss: 0.1997 (0.1997)  loss_classifier: 0.0726 (0.0726)  loss_box_reg: 0.1236 (0.1236)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0002 (0.0002)  loss_rpn_box_reg: 0.0032 (0.0032)  time: 1.8841  data: 1.3332  max mem: 3079
Epoch: [6]  [499/500]  eta: 0:00:00  lr: 0.005000  loss: 0.1826 (0.1874)  loss_classifier: 0.0569 (0.0594)  loss_box_reg: 0.1261 (0.1235)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0003 (0.0008)  loss_rpn_box_reg: 0.0038 (0.0037)  time: 0.4612  data: 0.0131  max mem: 3079
Epoch: [6] Total time: 0:04:02 (0.4860 s / it)
Printing the loss: 0.1830734759569168
Print loss: 0.1830734759569168
creating index...
index created!
Test:  [  0/199]  eta: 0:03:27  model_time: 0.3891 (0.3891)  evaluator_time: 0.1135 (0.1135)  time: 1.0424  data: 0.5254  max mem: 3079
Test:  [100/199]  eta: 0:00:27  model_time: 0.1489 (0.1501)  evaluator_time: 0.1109 (0.1039)  time: 0.2752  data: 0.0058  max mem: 3079
Test:  [198/199]  eta: 0:00:00  model_time: 0.1486 (0.1496)  evaluator_time: 0.1150 (0.1081)  time: 0.2776  data: 0.0057  max mem: 3079
Test: Total time: 0:00:55 (0.2769 s / it)
Averaged stats: model_time: 0.1486 (0.1496)  evaluator_time: 0.1150 (0.1081)
Accumulating evaluation results...
DONE (t=0.04s).
Accumulating evaluation results...
DONE (t=0.04s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.709
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.959
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.870
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.678
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.719
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.052
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.494
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.765
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.750
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.772
IoU metric: segm
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [7]  [  0/500]  eta: 0:17:22  lr: 0.005000  loss: 0.2294 (0.2294)  loss_classifier: 0.0766 (0.0766)  loss_box_reg: 0.1465 (0.1465)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0003 (0.0003)  loss_rpn_box_reg: 0.0060 (0.0060)  time: 2.0845  data: 1.4786  max mem: 3079
Epoch: [7]  [499/500]  eta: 0:00:00  lr: 0.005000  loss: 0.1694 (0.1773)  loss_classifier: 0.0558 (0.0555)  loss_box_reg: 0.1067 (0.1174)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0004 (0.0007)  loss_rpn_box_reg: 0.0030 (0.0037)  time: 0.4656  data: 0.0148  max mem: 3079
Epoch: [7] Total time: 0:04:05 (0.4908 s / it)
Printing the loss: 0.11513731628656387
Print loss: 0.11513731628656387
creating index...
index created!
Test:  [  0/199]  eta: 0:03:34  model_time: 0.3280 (0.3280)  evaluator_time: 0.1290 (0.1290)  time: 1.0797  data: 0.6058  max mem: 3079
Test:  [100/199]  eta: 0:00:26  model_time: 0.1456 (0.1476)  evaluator_time: 0.1049 (0.1015)  time: 0.2722  data: 0.0057  max mem: 3079
Test:  [198/199]  eta: 0:00:00  model_time: 0.1450 (0.1477)  evaluator_time: 0.1173 (0.1063)  time: 0.2781  data: 0.0057  max mem: 3079
Test: Total time: 0:00:54 (0.2735 s / it)
Averaged stats: model_time: 0.1450 (0.1477)  evaluator_time: 0.1173 (0.1063)
Accumulating evaluation results...
DONE (t=0.04s).
Accumulating evaluation results...
DONE (t=0.04s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.735
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.884
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.723
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.742
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.054
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.506
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.787
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.781
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.789
IoU metric: segm
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [8]  [  0/500]  eta: 0:10:37  lr: 0.005000  loss: 0.1379 (0.1379)  loss_classifier: 0.0364 (0.0364)  loss_box_reg: 0.0962 (0.0962)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0009 (0.0009)  loss_rpn_box_reg: 0.0043 (0.0043)  time: 1.2740  data: 0.7329  max mem: 3079
Epoch: [8]  [499/500]  eta: 0:00:00  lr: 0.005000  loss: 0.1644 (0.1655)  loss_classifier: 0.0532 (0.0514)  loss_box_reg: 0.1124 (0.1101)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0003 (0.0006)  loss_rpn_box_reg: 0.0035 (0.0033)  time: 0.4594  data: 0.0144  max mem: 3079
Epoch: [8] Total time: 0:04:03 (0.4871 s / it)
Printing the loss: 0.16204866766929626
Print loss: 0.16204866766929626
creating index...
index created!
Test:  [  0/199]  eta: 0:03:33  model_time: 0.3439 (0.3439)  evaluator_time: 0.1154 (0.1154)  time: 1.0741  data: 0.5955  max mem: 3079
Test:  [100/199]  eta: 0:00:26  model_time: 0.1488 (0.1465)  evaluator_time: 0.1102 (0.1015)  time: 0.2731  data: 0.0058  max mem: 3079
Test:  [198/199]  eta: 0:00:00  model_time: 0.1479 (0.1477)  evaluator_time: 0.1112 (0.1068)  time: 0.2759  data: 0.0059  max mem: 3079
Test: Total time: 0:00:54 (0.2740 s / it)
Averaged stats: model_time: 0.1479 (0.1477)  evaluator_time: 0.1112 (0.1068)
Accumulating evaluation results...
DONE (t=0.04s).
Accumulating evaluation results...
DONE (t=0.04s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.756
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.901
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.744
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.760
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.055
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.517
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.801
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.800
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.802
IoU metric: segm
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [9]  [  0/500]  eta: 0:10:09  lr: 0.005000  loss: 0.1542 (0.1542)  loss_classifier: 0.0470 (0.0470)  loss_box_reg: 0.1036 (0.1036)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0002 (0.0002)  loss_rpn_box_reg: 0.0034 (0.0034)  time: 1.2189  data: 0.6594  max mem: 3079
Epoch: [9]  [499/500]  eta: 0:00:00  lr: 0.005000  loss: 0.1434 (0.1539)  loss_classifier: 0.0453 (0.0489)  loss_box_reg: 0.0957 (0.1013)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0002 (0.0007)  loss_rpn_box_reg: 0.0028 (0.0031)  time: 0.4735  data: 0.0160  max mem: 3079
Epoch: [9] Total time: 0:04:04 (0.4885 s / it)
Printing the loss: 0.16327784955501556
Print loss: 0.16327784955501556
creating index...
index created!
Test:  [  0/199]  eta: 0:03:33  model_time: 0.3290 (0.3290)  evaluator_time: 0.1202 (0.1202)  time: 1.0724  data: 0.6020  max mem: 3079
Test:  [100/199]  eta: 0:00:26  model_time: 0.1460 (0.1456)  evaluator_time: 0.1054 (0.0997)  time: 0.2677  data: 0.0058  max mem: 3079
Test:  [198/199]  eta: 0:00:00  model_time: 0.1497 (0.1465)  evaluator_time: 0.1167 (0.1044)  time: 0.2783  data: 0.0058  max mem: 3079
Test: Total time: 0:00:53 (0.2704 s / it)
Averaged stats: model_time: 0.1497 (0.1465)  evaluator_time: 0.1167 (0.1044)
Accumulating evaluation results...
DONE (t=0.04s).
Accumulating evaluation results...
DONE (t=0.04s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.760
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.902
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.746
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.764
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.055
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.519
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.805
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.808
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.804
IoU metric: segm
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [10]  [  0/500]  eta: 0:16:37  lr: 0.005000  loss: 0.1458 (0.1458)  loss_classifier: 0.0448 (0.0448)  loss_box_reg: 0.0986 (0.0986)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0003 (0.0003)  loss_rpn_box_reg: 0.0022 (0.0022)  time: 1.9944  data: 1.3995  max mem: 3079
Epoch: [10]  [499/500]  eta: 0:00:00  lr: 0.005000  loss: 0.1368 (0.1442)  loss_classifier: 0.0379 (0.0444)  loss_box_reg: 0.0906 (0.0963)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0003 (0.0005)  loss_rpn_box_reg: 0.0025 (0.0029)  time: 0.4594  data: 0.0150  max mem: 3079
Epoch: [10] Total time: 0:04:05 (0.4905 s / it)
Printing the loss: 0.13135306537151337
Print loss: 0.13135306537151337
creating index...
index created!
Test:  [  0/199]  eta: 0:03:27  model_time: 0.3721 (0.3721)  evaluator_time: 0.1068 (0.1068)  time: 1.0444  data: 0.5521  max mem: 3079
Test:  [100/199]  eta: 0:00:26  model_time: 0.1451 (0.1451)  evaluator_time: 0.1045 (0.0977)  time: 0.2652  data: 0.0060  max mem: 3079
Test:  [198/199]  eta: 0:00:00  model_time: 0.1465 (0.1461)  evaluator_time: 0.1123 (0.1028)  time: 0.2769  data: 0.0065  max mem: 3079
Test: Total time: 0:00:53 (0.2685 s / it)
Averaged stats: model_time: 0.1465 (0.1461)  evaluator_time: 0.1123 (0.1028)
Accumulating evaluation results...
DONE (t=0.04s).
Accumulating evaluation results...
DONE (t=0.04s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.772
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.913
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.758
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.776
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.055
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.523
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.813
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.811
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.815
IoU metric: segm
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
/usr/local/lib/python3.6/dist-packages/torch/nn/functional.py:3103: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn("The default behavior for interpolate/upsample with float scale_factor changed "
Epoch: [11]  [  0/500]  eta: 0:14:13  lr: 0.005000  loss: 0.1831 (0.1831)  loss_classifier: 0.0445 (0.0445)  loss_box_reg: 0.1337 (0.1337)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0005 (0.0005)  loss_rpn_box_reg: 0.0043 (0.0043)  time: 1.7068  data: 1.1062  max mem: 3079
Epoch: [11]  [499/500]  eta: 0:00:00  lr: 0.005000  loss: 0.1367 (0.1385)  loss_classifier: 0.0389 (0.0438)  loss_box_reg: 0.0928 (0.0914)  loss_mask: 0.0000 (0.0000)  loss_objectness: 0.0003 (0.0005)  loss_rpn_box_reg: 0.0021 (0.0027)  time: 0.4603  data: 0.0140  max mem: 3079
Epoch: [11] Total time: 0:04:04 (0.4898 s / it)
Printing the loss: 0.16654391586780548
Print loss: 0.16654391586780548
creating index...
index created!
Test:  [  0/199]  eta: 0:03:37  model_time: 0.4371 (0.4371)  evaluator_time: 0.1271 (0.1271)  time: 1.0946  data: 0.5094  max mem: 3079
Test:  [100/199]  eta: 0:00:27  model_time: 0.1461 (0.1503)  evaluator_time: 0.1079 (0.1048)  time: 0.2763  data: 0.0059  max mem: 3079
Test:  [198/199]  eta: 0:00:00  model_time: 0.1508 (0.1500)  evaluator_time: 0.1206 (0.1098)  time: 0.2828  data: 0.0058  max mem: 3079
Test: Total time: 0:00:55 (0.2794 s / it)
Averaged stats: model_time: 0.1508 (0.1500)  evaluator_time: 0.1206 (0.1098)
Accumulating evaluation results...
DONE (t=0.04s).
Accumulating evaluation results...
DONE (t=0.04s).
IoU metric: bbox
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.775
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.960
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.914
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.766
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.779
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.056
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.527
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.819
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.818
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.819
IoU metric: segm
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = -1.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.000